# Embedder Service Containerfile
# This container runs the embedding pipeline to process corpus data and create vector store

FROM python:3.12.2-slim-bookworm

# Set working directory
WORKDIR /app

# Install system dependencies for document processing including uv
RUN apt-get update && apt-get install -y \
    build-essential \
    libsndfile1 \
    ffmpeg \
    poppler-utils \
    tesseract-ocr \
    libreoffice \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install uv package manager
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.cargo/bin:$PATH"

# Copy project files for uv
COPY pyproject.toml ./
COPY uv.lock ./uv.lock

# Install dependencies with uv (ml extras for full document processing)
RUN uv sync --extra ml --no-dev

# Copy only necessary source code for embedder
COPY src/embedders/ ./src/embedders/
COPY src/utils/ ./src/utils/
COPY src/html_parser.py ./src/
COPY src/__init__.py ./src/

# Copy configuration
COPY conf/ ./conf/

# Set environment variables
ENV PYTHONPATH=/app
ENV TOKENIZERS_PARALLELISM=false
ENV PYTORCH_ENABLE_MPS_FALLBACK=1

# Create directories for data and output
RUN mkdir -p /app/corpus /app/vector_store /app/logs

# Set volumes for data persistence
VOLUME ["/app/corpus", "/app/vector_store", "/app/logs"]

# Use ENTRYPOINT for the main command
ENTRYPOINT ["python", "-m", "src.embedders.main_embedder"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import os; exit(0 if os.path.exists('/app/vector_store') else 1)"